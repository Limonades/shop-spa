{"version":3,"sources":["assets/imgs/logo.svg","assets/imgs/caret.svg","components/Header/Header.jsx","components/Content/Content.jsx","components/Products/Products.jsx","components/HomePage/HomePage.jsx","components/ProductPage/ProductPage.jsx","redux-modules/products/types.js","utils/api.js","redux-modules/products/actions.js","components/ProductsNav/ProductsNav.jsx","components/ProductsSorter/ProductsSorter.jsx","components/ProductsGrid/ProductsGrid.jsx","utils/constants.js","components/ProductSlider/ProductSlider.jsx","components/ProductsCard/ProductsCard.jsx","redux-modules/products/index.js","redux-modules/index.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","caret","React","Content","Products","HomePage","ProductPage","IS_FETCHING","API","this","defaultHeaders","Headers","url","params","options","method","headers","fetch","process","setIsFetching","bool","type","types","payload","fetchSuccess","result","fetchError","err","ProductsNav","state","activeId","handleClick","ev","props","filter","filterReset","id","target","dataset","setState","data-id","onClick","connect","dispatch","filterProducts","ProductsSorter","isOpen","activeSorting","handleToggle","name","sortProducts","sortItems","ProductsGrid","getProducts","isFetching","products","map","product","key","filteredProducts","items","filteredItems","a","get","then","response","json","status","message","ProductSlider","console","dir","setTempImage","currentSrc","images","infinite","speed","slidesToShow","slidesToScroll","image","index","style","height","width","ProductsCard","tempImage","preventDefault","title","price","category","count","thumbnail","to","initialState","error","action","item","sort","b","createdTimestamp","combineReducers","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","thunk","configureStore","App","basename","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0c6ee45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.76518c38.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret.53e58f1a.svg\";","import * as React from \"react\";\nimport \"./index.scss\";\nimport logo from \"../../assets/imgs/logo.svg\";\nimport caret from \"../../assets/imgs/caret.svg\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <div className='header__container container'>\n          <a className=\"header__logo\" href=\"/\">\n            <img src={logo} alt=\"site-logo\" />\n          </a>\n\n          <div className=\"header__cart-wrap\">\n            <button className=\"header__cart\">\n              <img src={caret} alt=\"caret-icon\" />\n            </button>\n            <div className=\"header__cart-counter\">\n              <span>3</span>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from \"react\";\nimport \"./index.scss\";\nimport { Products } from \"../\";\n\nclass Content extends React.Component {\n  render() {\n    return (\n      <main>\n        <Products />\n      </main>\n    );\n  }\n}\n\nexport default Content;\n","import * as React from \"react\";\nimport \"./index.scss\";\nimport { ProductsNav } from \"../\";\nimport { ProductsSorter } from \"../\";\nimport { ProductsGrid } from \"../\";\n\nclass Products extends React.Component {\n  render() {\n    return (\n      <section className='products'>\n        <div className=\"products__container container\">\n          <div className='products__nav-wrap'>\n            <ProductsNav />\n            <ProductsSorter />\n          </div>\n          <div className='products__products-wrap'>\n            <ProductsGrid />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Products;\n","import * as React from \"react\";\nimport \"./index.scss\";\nimport { Header } from \"../\";\nimport { Content } from \"../\";\n\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Content />\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","import * as React from 'react'\nimport './index.scss'\n\nclass ProductPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>PRODUCT-PAGE</h2>\n      </>\n    )\n  }\n}\n\nexport default ProductPage;","export const IS_FETCHING = '@@products/is-fetching';\r\nexport const FETCH_SUCCESS = '@@products/fetch-success';\r\nexport const FETCH_ERROR = '@@products/fetch-error';\r\nexport const FILTER_PRODUCTS = '@@products/filter-products';\r\nexport const FILTER_RESET = '@@products/filter-reset';\r\nexport const SORT_PRODUCTS = '@@products/sort-products';","class Api {\r\n\tconstructor() {\r\n\t\tthis.defaultHeaders = new Headers({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Accept': 'application/json'\r\n\t\t})\r\n\t}\r\n\r\n\tget(url, params) {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: this.defaultHeaders\r\n\t\t};\r\n\t\treturn fetch(`${process.env.PUBLIC_URL}/${url}/`, options)\r\n\t}\r\n}\r\n\r\nexport const API = new Api();","import * as types from './types';\r\nimport { API } from \"../../utils\";\r\nimport { PRODUCT_URL } from \"../../utils/constants\";\r\n\r\nexport const setIsFetching = bool => ({\r\n\ttype: types.IS_FETCHING,\r\n\tpayload: bool,\r\n});\r\n\r\nexport const fetchSuccess = result => ({\r\n\ttype: types.FETCH_SUCCESS,\r\n\tpayload: result\r\n});\r\n\r\nexport const fetchError = err => ({\r\n\ttype: types.FETCH_ERROR,\r\n\tpayload: err\r\n});\r\n\r\nexport const fetchProducts = () => async dispatch => {\r\n\tdispatch(setIsFetching(true));\r\n\r\n\ttry {\r\n\t\tconst result = await API.get(PRODUCT_URL).then(response => response.json());\r\n\t\tdispatch(fetchSuccess(result));\r\n\t} catch (e) {\r\n\t\tconst err = {\r\n\t\t\tstatus: 599,\r\n\t\t\tmessage: 'Oops! Something wend wrong!',\r\n\t\t};\r\n\t\tdispatch(fetchError(err));\r\n\t} finally {\r\n\t\tdispatch(setIsFetching(false));\r\n\t}\r\n};\r\n\r\nexport const filterProducts = id => ({\r\n\ttype: types.FILTER_PRODUCTS,\r\n\tpayload: id\r\n});\r\n\r\nexport const filterReset = () => ({\r\n\ttype: types.FILTER_RESET,\r\n});\r\n\r\nexport const sortItems = name => ({\r\n\ttype: types.SORT_PRODUCTS,\r\n\tpayload: name\r\n});","import * as React from \"react\";\r\nimport \"./index.scss\";\r\nimport {filterProducts, filterReset} from \"../../redux-modules/products/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProductsNav extends React.Component {\r\n  state = {\r\n    activeId: 'reset'\r\n  };\r\n  handleClick = ev => {\r\n    const { filter, filterReset } = this.props;\r\n    const { id } = ev.target.dataset;\r\n    this.setState({\r\n      activeId: id\r\n    });\r\n    if (id === 'reset') {\r\n      return filterReset()\r\n    }\r\n    filter(id)\r\n\r\n  };\r\n  render() {\r\n    const { activeId } = this.state;\r\n    return (\r\n      <nav className='products-nav'>\r\n        <ul className='products-nav__list'>\r\n          <li className='products-nav__item'>\r\n            <button className={activeId ===  'reset' ? 'products-nav__link --active' : 'products-nav__link'} data-id=\"reset\" type=\"button\" onClick={this.handleClick}>\r\n              Все\r\n            </button>\r\n          </li>\r\n\r\n          <li className='products-nav__item'>\r\n            <button className={activeId ===  '3' ? 'products-nav__link --active' : 'products-nav__link'} type=\"button\"  data-id=\"3\" onClick={this.handleClick}>Рубашки</button>\r\n          </li>\r\n\r\n          <li className='products-nav__item'>\r\n            <button className={activeId ===  '2' ? 'products-nav__link --active' : 'products-nav__link'} type=\"button\" data-id=\"2\" onClick={this.handleClick}>Кроссовки</button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filter: id => dispatch(filterProducts(id)),\r\n  filterReset: () => dispatch(filterReset())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductsNav);\r\n","import * as React from \"react\";\r\nimport \"./index.scss\";\r\nimport {sortItems} from \"../../redux-modules/products/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProductsSorter extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    activeSorting: null\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState({isOpen: !this.state.isOpen})\r\n  };\r\n\r\n  handleClick = ev => {\r\n    const { name } = ev.target;\r\n    const { sortProducts } = this.props;\r\n    sortProducts(name)\r\n    this.setState({activeSorting: name})\r\n  };\r\n\r\n  render() {\r\n    const { isOpen, activeSorting } = this.state;\r\n    return (\r\n      <div className=\"products-sorter\">\r\n        <div className=\"products-sorter__toggle-wrap\">\r\n          <button className={isOpen ? \"products-sorter__toggle --open\" : \"products-sorter__toggle\"} onClick={this.handleToggle}>\r\n            <span className='products-sorter__toggle-txt'>Сортировать</span>\r\n            <i className=\"products-sorter__toggle-icon icon-caret-down\" />\r\n          </button>\r\n          <ul className=\"products-sorter__list\">\r\n            <li className=\"products-sorter__item\">\r\n              <button className={activeSorting === \"priceDown\" ? \"products-sorter__btn --active\" : \"products-sorter__btn\"} name=\"priceDown\" onClick={this.handleClick} >\r\n                От дорогих к дешевым\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button className={activeSorting === \"priceUp\" ? \"products-sorter__btn --active\" : \"products-sorter__btn\"} name=\"priceUp\" onClick={this.handleClick}>\r\n                От дешевых к дорогим\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button className={activeSorting === \"popular\" ? \"products-sorter__btn --active\" : \"products-sorter__btn\"} name=\"popular\" onClick={this.handleClick}>Популярные</button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button className={activeSorting === \"new\" ? \"products-sorter__btn --active\" : \"products-sorter__btn\"} name=\"new\" onClick={this.handleClick}>Новые</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sortProducts: name => dispatch(sortItems(name)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductsSorter);\r\n\r\n","import * as React from \"react\";\r\nimport { ProductsCard } from \"../\";\r\nimport \"./index.scss\";\r\nimport {fetchProducts} from \"../../redux-modules/products/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProductsGrid extends React.Component {\r\n  componentDidMount() {\r\n    const { getProducts } = this.props;\r\n    getProducts()\r\n  }\r\n\r\n  get products() {\r\n      if (this.props.filteredProducts) {\r\n        return this.props.filteredProducts\r\n      } else {\r\n        return this.props.products\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { isFetching } = this.props;\r\n    return (\r\n      <ul className=\"products-grid\">\r\n        {isFetching ? <p>...Loading</p> : this.products.map(product => <ProductsCard key={product.id} {...product}/>)}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.items,\r\n  filteredProducts: state.products.filteredItems,\r\n  isFetching: state.products.isFetching\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProducts:()  => dispatch(fetchProducts())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsGrid);\r\n","export  const PRODUCT_URL = '/server/products.json';","import * as React from 'react'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport './index.scss'\r\n\r\nclass ProductSlider extends React.Component {\r\n\thandleClick = ev => {\r\n\t\tconsole.dir(ev.target);\r\n\t\tconst { setTempImage } = this.props;\r\n\t\tsetTempImage(ev.target.currentSrc)\r\n\t};\r\n\trender() {\r\n\t\tconst { images } = this.props\r\n\t\tconst settings = {\r\n\t\t\tinfinite: true,\r\n\t\t\tspeed: 500,\r\n\t\t\tslidesToShow: 5,\r\n\t\t\tslidesToScroll: 1\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<Slider {...settings}>\r\n\t\t\t\t{images.map((image, index) =>\t<div key={index} style={{height: '100%'}}><img style={{width: '100%'}} src={image} alt=\"\" onClick={this.handleClick}/></div> )}\r\n\t\t\t</Slider>\r\n\t\t);\r\n\t}\r\n}\r\nexport  default ProductSlider\r\n","import * as React from \"react\";\r\nimport \"./index.scss\";\r\nimport { ProductSlider } from \"../ProductSlider\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProductsCard extends React.Component {\r\n  state = {\r\n    tempImage: null\r\n  };\r\n\r\n  get image() {\r\n    const { image } = this.props;\r\n    const { tempImage } = this.state;\r\n    if (tempImage) {\r\n      return  tempImage\r\n    }\r\n    return image ? image : \"http://placekitten.com/200/30\"\r\n\r\n  }\r\n\r\n  setTempImage = image => {\r\n    this.setState({tempImage: image})\r\n  };\r\n\r\n  handleClick = ev => {\r\n    ev.preventDefault();\r\n  };\r\n  render() {\r\n    const { title, price, category, count, thumbnail } = this.props;\r\n\r\n    return (\r\n      <li className='products-grid__card'>\r\n        <Link className='products-grid__link' to={\"/1\"}>\r\n          <div>\r\n            <picture className='products-grid__card-img'>\r\n              <img src={this.image} alt={`${title}`} />\r\n            </picture>\r\n            <div className='products-grid__slider' onClick={this.handleClick}>\r\n              <ProductSlider images={thumbnail} setTempImage={this.setTempImage}/>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className='products-grid__card-content'>\r\n            <h3 className='products-grid__category'>\r\n              {category.name}\r\n            </h3>\r\n            <p className='products-grid__name'>\r\n              {title}\r\n            </p>\r\n            <div className='products-grid__info-wrap'>\r\n              <h2 className='products-grid__price'>\r\n                ${price}\r\n              </h2>\r\n              <span className='products-grid__qty'>\r\n                  на складе: {count}\r\n                </span>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsCard;\r\n","import * as types from './types';\r\n\r\nconst initialState = {\r\n\tisFetching: false,\r\n\terror: null,\r\n\titems: [],\r\n\tfilteredItems: null\r\n};\r\n\r\nexport const products = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.IS_FETCHING:\r\n\t\t\treturn { ...state, isFetching: action.payload };\r\n\r\n\t\tcase types.FETCH_SUCCESS:\r\n\t\t\treturn  {...state, items: action.payload };\r\n\r\n\t\tcase types.FILTER_PRODUCTS:\r\n\t\t\treturn {...state, filteredItems: state.items.filter(item => item.category.id === action.payload)};\r\n\r\n\t\tcase types.FILTER_RESET:\r\n\t\t\treturn  {...state, filteredItems: null };\r\n\r\n\t\tcase types.SORT_PRODUCTS:\r\n\t\t\tif (action.payload === 'priceDown') {\r\n\t\t\t\tif (state.filteredItems) {\r\n\t\t\t\t\treturn {...state, filteredItems: [...state.filteredItems].sort((a,b) => b.price - a.price), items: [...state.items].sort((a,b) => b.price - a.price)}\r\n\t\t\t\t}\r\n\t\t\t\treturn {...state, items: [...state.items].sort((a,b) => b.price - a.price)};\r\n\t\t\t}\r\n\r\n\t\t\tif (action.payload === 'priceUp') {\r\n\t\t\t\tif (state.filteredItems) {\r\n\t\t\t\t\treturn {...state, filteredItems: [...state.filteredItems].sort((a,b) => a.price - b.price), items: [...state.items].sort((a,b) => a.price - b.price)}\r\n\t\t\t\t}\r\n\t\t\t\treturn {...state, items: [...state.items].sort((a,b) => a.price - b.price)};\r\n\t\t\t}\r\n\r\n\t\t\tif (action.payload === 'popular') {\r\n\t\t\t\tif (state.filteredItems) {\r\n\t\t\t\t\treturn {...state, filteredItems: [...state.filteredItems].sort((a,b) => a.count - b.count), items: [...state.items].sort((a,b) => a.count - b.count)}\r\n\t\t\t\t}\r\n\t\t\t\treturn {...state, items: [...state.items].sort((a,b) => a.count - b.count)};\r\n\t\t\t}\r\n\r\n\t\t\tif (action.payload === 'new') {\r\n\t\t\t\tif (state.filteredItems) {\r\n\t\t\t\t\treturn {...state, filteredItems: [...state.filteredItems].sort((a,b) => b.createdTimestamp - a.createdTimestamp), items: [...state.items].sort((a,b) => b.createdTimestamp - a.createdTimestamp)}\r\n\t\t\t\t}\r\n\t\t\t\treturn {...state, items: [...state.items].sort((a,b) => b.createdTimestamp - a.createdTimestamp)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn  {...state};\r\n\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { products } from './products';\r\n\r\nexport default () =>\r\n\tcombineReducers({\r\n\t\tproducts\r\n\t});\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./assets/scss/index.scss\";\nimport \"./App.scss\";\nimport { HomePage } from \"./components\";\nimport { ProductPage } from \"./components\";\nimport { Provider } from 'react-redux';\nimport configureStore from './store'\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/'}>\n            <HomePage />\n          </Route>\n          <Route path={process.env.PUBLIC_URL + '/product/:id'}>\n            <ProductPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../redux-modules';\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\treturn createStore(\r\n\t\tcreateRootReducer(),\r\n\t\tpreloadedState,\r\n\t\tcomposeEnhancers(applyMiddleware(thunk))\r\n\t);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}