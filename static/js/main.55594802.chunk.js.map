{"version":3,"sources":["assets/imgs/logo.svg","assets/imgs/caret.svg","components/Header/Header.jsx","components/Content/Content.jsx","components/Products/Products.jsx","components/HomePage/HomePage.jsx","components/ProductPage/ProductPage.jsx","redux-modules/products/types.js","utils/api.js","redux-modules/products/actions.js","components/ProductsNav/ProductsNav.jsx","components/ProductsSorter/ProductsSorter.jsx","components/ProductsGrid/ProductsGrid.jsx","utils/constants.js","components/ProductSlider/ProductSlider.jsx","components/ProductsCard/ProductsCard.jsx","redux-modules/products/index.js","redux-modules/index.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","type","caret","React","Content","Products","HomePage","ProductPage","IS_FETCHING","API","this","defaultHeaders","Headers","Accept","url","params","options","method","headers","fetch","process","setIsFetching","bool","types","payload","fetchSuccess","result","fetchError","err","ProductsNav","props","handleClick","ev","filter","filterNavReset","id","target","dataset","setState","activeId","state","data-id","onClick","connect","dispatch","filterProducts","ProductsSorter","handleToggle","isOpen","name","sortProducts","activeSorting","sortItems","ProductsGrid","getProducts","isFetching","products","map","product","key","filteredProducts","items","filteredItems","a","get","then","response","json","status","message","ProductSlider","setTempImage","currentSrc","activeSlide","index","images","infinite","speed","slidesToShow","slidesToScroll","image","style","width","data-index","ProductsCard","tempImage","preventDefault","title","price","category","count","thumbnail","to","initialState","error","action","item","sort","b","createdTimestamp","combineReducers","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","thunk","configureStore","App","basename","path","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55594802.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.76518c38.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret.53e58f1a.svg\";","import * as React from 'react';\r\nimport './index.scss';\r\nimport logo from '../../assets/imgs/logo.svg';\r\nimport caret from '../../assets/imgs/caret.svg';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header__container container\">\r\n          <a className=\"header__logo\" href=\"/\">\r\n            <img src={logo} alt=\"site-logo\" />\r\n          </a>\r\n\r\n          <div className=\"header__cart-wrap\">\r\n            <button type=\"button\" className=\"header__cart\">\r\n              <img src={caret} alt=\"caret-icon\" />\r\n            </button>\r\n            <div className=\"header__cart-counter\">\r\n              <span>3</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Products } from '..';\r\n\r\nclass Content extends React.Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Products />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { ProductsNav, ProductsSorter, ProductsGrid } from '..';\r\n\r\nclass Products extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className=\"products\">\r\n        <div className=\"products__container container\">\r\n          <div className=\"products__nav-wrap\">\r\n            <ProductsNav />\r\n            <ProductsSorter />\r\n          </div>\r\n          <div className=\"products__products-wrap\">\r\n            <ProductsGrid />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Header, Content } from '..';\r\n\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Content />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\n\r\nclass ProductPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>PRODUCT-PAGE</h2>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductPage;\r\n","export const IS_FETCHING = '@@products/is-fetching';\r\nexport const FETCH_SUCCESS = '@@products/fetch-success';\r\nexport const FETCH_ERROR = '@@products/fetch-error';\r\nexport const FILTER_PRODUCTS = '@@products/filter-products';\r\nexport const FILTER_RESET = '@@products/filter-reset';\r\nexport const SORT_PRODUCTS = '@@products/sort-products';\r\n","class Api {\r\n  constructor() {\r\n    this.defaultHeaders = new Headers({\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n    });\r\n  }\r\n\r\n  get(url, params) {\r\n    const options = {\r\n      method: 'GET',\r\n      headers: this.defaultHeaders,\r\n    };\r\n\r\n    return fetch(`${process.env.PUBLIC_URL}/${url}`, options);\r\n  }\r\n}\r\n\r\nexport const API = new Api();\r\n","import * as types from './types';\r\nimport { API } from '../../utils';\r\nimport { PRODUCT_URL } from '../../utils/constants';\r\n\r\nexport const setIsFetching = bool => ({\r\n  type: types.IS_FETCHING,\r\n  payload: bool,\r\n});\r\n\r\nexport const fetchSuccess = result => ({\r\n  type: types.FETCH_SUCCESS,\r\n  payload: result,\r\n});\r\n\r\nexport const fetchError = err => ({\r\n  type: types.FETCH_ERROR,\r\n  payload: err,\r\n});\r\n\r\nexport const fetchProducts = () => async dispatch => {\r\n  dispatch(setIsFetching(true));\r\n\r\n  try {\r\n    const result = await API.get(PRODUCT_URL).then(response => response.json());\r\n    dispatch(fetchSuccess(result));\r\n  } catch (e) {\r\n    const err = {\r\n      status: 599,\r\n      message: 'Oops! Something wend wrong!',\r\n    };\r\n    dispatch(fetchError(err));\r\n  } finally {\r\n    dispatch(setIsFetching(false));\r\n  }\r\n};\r\n\r\nexport const filterProducts = id => ({\r\n  type: types.FILTER_PRODUCTS,\r\n  payload: id,\r\n});\r\n\r\nexport const filterReset = () => ({\r\n  type: types.FILTER_RESET,\r\n});\r\n\r\nexport const sortItems = name => ({\r\n  type: types.SORT_PRODUCTS,\r\n  payload: name,\r\n});\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { filterProducts, filterReset } from '../../redux-modules/products/actions';\r\n\r\nclass ProductsNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeId: 'reset',\r\n    };\r\n  }\r\n\r\n  handleClick = ev => {\r\n    const { filter, filterNavReset } = this.props;\r\n    const { id } = ev.target.dataset;\r\n\r\n    this.setState({\r\n      activeId: id,\r\n    });\r\n\r\n    if (id === 'reset') {\r\n      return filterNavReset();\r\n    }\r\n\r\n    filter(id);\r\n  };\r\n\r\n  render() {\r\n    const { activeId } = this.state;\r\n    return (\r\n      <nav className=\"products-nav\">\r\n        <ul className=\"products-nav__list\">\r\n          <li className=\"products-nav__item\">\r\n            <button\r\n              className={\r\n                activeId === 'reset' ? 'products-nav__link --active' : 'products-nav__link'\r\n              }\r\n              data-id=\"reset\"\r\n              type=\"button\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Все\r\n            </button>\r\n          </li>\r\n\r\n          <li className=\"products-nav__item\">\r\n            <button\r\n              className={activeId === '3' ? 'products-nav__link --active' : 'products-nav__link'}\r\n              type=\"button\"\r\n              data-id=\"3\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Рубашки\r\n            </button>\r\n          </li>\r\n\r\n          <li className=\"products-nav__item\">\r\n            <button\r\n              className={activeId === '2' ? 'products-nav__link --active' : 'products-nav__link'}\r\n              type=\"button\"\r\n              data-id=\"2\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Кроссовки\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filter: id => dispatch(filterProducts(id)),\r\n  filterNavReset: () => dispatch(filterReset()),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductsNav);\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { sortItems } from '../../redux-modules/products/actions';\r\n\r\nclass ProductsSorter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      activeSorting: null,\r\n    };\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  handleClick = ev => {\r\n    const { name } = ev.target;\r\n    const { sortProducts } = this.props;\r\n    sortProducts(name);\r\n    this.setState({ activeSorting: name });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen, activeSorting } = this.state;\r\n\r\n    return (\r\n      <div className=\"products-sorter\">\r\n        <div className=\"products-sorter__toggle-wrap\">\r\n          <button\r\n            type=\"button\"\r\n            className={isOpen ? 'products-sorter__toggle --open' : 'products-sorter__toggle'}\r\n            onClick={this.handleToggle}\r\n          >\r\n            <span className=\"products-sorter__toggle-txt\">Сортировать</span>\r\n            <i className=\"products-sorter__toggle-icon icon-caret-down\" />\r\n          </button>\r\n          <ul className=\"products-sorter__list\">\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'priceDown'\r\n                    ? 'products-sorter__btn --active'\r\n                    : 'products-sorter__btn'\r\n                }\r\n                name=\"priceDown\"\r\n                onClick={this.handleClick}\r\n              >\r\n                От дорогих к дешевым\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'priceUp'\r\n                    ? 'products-sorter__btn --active'\r\n                    : 'products-sorter__btn'\r\n                }\r\n                name=\"priceUp\"\r\n                onClick={this.handleClick}\r\n              >\r\n                От дешевых к дорогим\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'popular'\r\n                    ? 'products-sorter__btn --active'\r\n                    : 'products-sorter__btn'\r\n                }\r\n                name=\"popular\"\r\n                onClick={this.handleClick}\r\n              >\r\n                Популярные\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'new' ? 'products-sorter__btn --active' : 'products-sorter__btn'\r\n                }\r\n                name=\"new\"\r\n                onClick={this.handleClick}\r\n              >\r\n                Новые\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sortProducts: name => dispatch(sortItems(name)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductsSorter);\r\n","import * as React from 'react';\r\nimport { ProductsCard } from '..';\r\nimport './index.scss';\r\nimport { fetchProducts } from '../../redux-modules/products/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProductsGrid extends React.Component {\r\n  componentDidMount() {\r\n    const { getProducts } = this.props;\r\n\r\n    getProducts();\r\n  }\r\n\r\n  get products() {\r\n    const { filteredProducts, products } = this.props;\r\n\r\n    if (filteredProducts) {\r\n      return filteredProducts;\r\n    }\r\n\r\n    return products;\r\n  }\r\n\r\n  render() {\r\n    const { isFetching } = this.props;\r\n    return (\r\n      <ul className=\"products-grid\">\r\n        {isFetching ? (\r\n          <p>...Loading</p>\r\n        ) : (\r\n          this.products.map(product => <ProductsCard key={product.id} {...product} />)\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.items,\r\n  filteredProducts: state.products.filteredItems,\r\n  isFetching: state.products.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProducts: () => dispatch(fetchProducts()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductsGrid);\r\n","export const PRODUCT_URL = '/server/products.json';\r\n","import * as React from 'react';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport Slider from 'react-slick';\r\nimport './index.scss';\r\n\r\nclass ProductSlider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSlide: '0',\r\n    };\r\n  }\r\n\r\n  handleClick = ev => {\r\n    const { setTempImage } = this.props;\r\n    setTempImage(ev.target.currentSrc);\r\n\r\n    this.setState({\r\n      activeSlide: ev.target.dataset.index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n    const { activeSlide } = this.state;\r\n    const settings = {\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n    };\r\n\r\n    return (\r\n      <Slider className=\"products-grid__slider\" {...settings}>\r\n        {images.map((image, index) => (\r\n          <div\r\n            className={\r\n              +activeSlide === index ? 'products-grid__slide --active' : 'products-grid__slide'\r\n            }\r\n            key={index}\r\n          >\r\n            <img\r\n              style={{ width: '100%' }}\r\n              src={image}\r\n              alt=\"thumbnail\"\r\n              data-index={index}\r\n              onClick={this.handleClick}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\nexport default ProductSlider;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProductSlider } from '../ProductSlider';\r\n\r\nclass ProductsCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tempImage: null,\r\n    };\r\n  }\r\n\r\n  get image() {\r\n    const { image } = this.props;\r\n    const { tempImage } = this.state;\r\n    if (tempImage) {\r\n      return tempImage;\r\n    }\r\n    return image || 'http://placekitten.com/200/30';\r\n  }\r\n\r\n  setTempImage = image => {\r\n    this.setState({ tempImage: image });\r\n  };\r\n\r\n  handleClick = ev => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { title, price, category, count, thumbnail, id } = this.props;\r\n\r\n    return (\r\n      <li className=\"products-grid__card\">\r\n        <Link className=\"products-grid__link\" to={`/product/${id}`}>\r\n          <div className=\"products-grid__card-img-wrap\">\r\n            <picture className=\"products-grid__card-img\">\r\n              <img src={this.image} alt={`${title}`} />\r\n            </picture>\r\n            <div className=\"products-grid__slider-wrap\" onClick={this.handleClick}>\r\n              <ProductSlider images={thumbnail} setTempImage={this.setTempImage} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"products-grid__card-content\">\r\n            <h3 className=\"products-grid__category\">{category.name}</h3>\r\n            <p className=\"products-grid__name\">{title}</p>\r\n            <div className=\"products-grid__info-wrap\">\r\n              <h2 className=\"products-grid__price\">${price}</h2>\r\n              <span className=\"products-grid__qty\">на складе: {count}</span>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsCard;\r\n","import * as types from './types';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  error: null,\r\n  items: [],\r\n  filteredItems: null,\r\n};\r\n\r\nexport const products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.IS_FETCHING:\r\n      return { ...state, isFetching: action.payload };\r\n\r\n    case types.FETCH_SUCCESS:\r\n      return { ...state, items: action.payload };\r\n\r\n    case types.FILTER_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        filteredItems: state.items.filter(item => item.category.id === action.payload),\r\n      };\r\n\r\n    case types.FILTER_RESET:\r\n      return { ...state, filteredItems: null };\r\n\r\n    case types.SORT_PRODUCTS:\r\n      if (action.payload === 'priceDown') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort((a, b) => b.price - a.price),\r\n            items: [...state.items].sort((a, b) => b.price - a.price),\r\n          };\r\n        }\r\n\r\n        return { ...state, items: [...state.items].sort((a, b) => b.price - a.price) };\r\n      }\r\n\r\n      if (action.payload === 'priceUp') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort((a, b) => a.price - b.price),\r\n            items: [...state.items].sort((a, b) => a.price - b.price),\r\n          };\r\n        }\r\n\r\n        return { ...state, items: [...state.items].sort((a, b) => a.price - b.price) };\r\n      }\r\n\r\n      if (action.payload === 'popular') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort((a, b) => a.count - b.count),\r\n            items: [...state.items].sort((a, b) => a.count - b.count),\r\n          };\r\n        }\r\n\r\n        return { ...state, items: [...state.items].sort((a, b) => a.count - b.count) };\r\n      }\r\n\r\n      if (action.payload === 'new') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort(\r\n              (a, b) => b.createdTimestamp - a.createdTimestamp\r\n            ),\r\n            items: [...state.items].sort((a, b) => b.createdTimestamp - a.createdTimestamp),\r\n          };\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          items: [...state.items].sort((a, b) => b.createdTimestamp - a.createdTimestamp),\r\n        };\r\n      }\r\n\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { products } from './products';\r\n\r\nexport default () =>\r\n\tcombineReducers({\r\n\t\tproducts\r\n\t});\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './assets/scss/index.scss';\r\nimport './App.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { HomePage, ProductPage } from './components';\r\n\r\nimport configureStore from './store';\r\n\r\nconst store = configureStore();\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/product/:id\">\r\n            <ProductPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../redux-modules';\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\treturn createStore(\r\n\t\tcreateRootReducer(),\r\n\t\tpreloadedState,\r\n\t\tcomposeEnhancers(applyMiddleware(thunk))\r\n\t);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}