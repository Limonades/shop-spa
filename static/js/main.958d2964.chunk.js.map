{"version":3,"sources":["assets/imgs/logo.svg","assets/imgs/caret.svg","assets/imgs/close.svg","components/Cart/Cart.jsx","redux-modules/cart/actions.js","redux-modules/cart/types.js","components/Header/Header.jsx","components/Content/Content.jsx","components/Products/Products.jsx","components/HomePage/HomePage.jsx","redux-modules/products/types.js","utils/api.js","redux-modules/products/actions.js","utils/constants.js","components/ProductPage/ProductPage.jsx","components/ProductsNav/ProductsNav.jsx","components/ProductsSorter/ProductsSorter.jsx","components/ProductsGrid/ProductsGrid.jsx","components/ProductSlider/ProductSlider.jsx","components/ProductsCard/ProductsCard.jsx","redux-modules/products/index.js","redux-modules/cart/index.js","redux-modules/index.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","Cart","this","props","cart","increase","decrease","cartToggle","isEmpty","className","onClick","type","src","close","alt","length","map","item","key","id","process","image","title","qty","price","reduce","acc","val","React","connect","state","items","dispatch","payload","increaseQuantity","decreaseQuantity","Header","handleClick","isOpen","setState","to","logo","caret","Content","Products","HomePage","IS_FETCHING","API","defaultHeaders","Headers","Accept","url","params","options","method","headers","fetch","setIsFetching","bool","types","fetchSuccess","result","fetchError","err","fetchProducts","a","get","then","response","json","status","message","selectProduct","ProductPage","handleChange","ev","size","target","value","handleSubmit","preventDefault","addProductToCart","selectedItem","match","getProducts","selectCurrentProduct","text","onSubmit","class","category","name","onChange","defaultValue","sizes","selectedSize","index","disabled","dangerouslySetInnerHTML","description","__html","withRouter","products","selectedId","product","ProductsNav","filter","filterNavReset","dataset","activeId","data-id","filterProducts","ProductsSorter","handleToggle","sortProducts","activeSorting","sortItems","ProductsGrid","isFetching","filteredProducts","filteredItems","ProductSlider","setTempImage","currentSrc","activeSlide","images","infinite","speed","slidesToShow","slidesToScroll","style","width","data-index","ProductsCard","tempImage","count","thumbnail","initialState","error","action","sort","b","createdTimestamp","isExist","computedItems","push","increasedItems","decreasedItems","combineReducers","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","thunk","configureStore","App","basename","path","exact","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.958d2964.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.76518c38.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret.53e58f1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.90506c7b.svg\";","import * as React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport close from '../../assets/imgs/close.svg';\r\nimport { decreaseQuantity, increaseQuantity } from '../../redux-modules/cart/actions';\r\n\r\nclass Cart extends React.Component {\r\n  render() {\r\n    const { cart, increase, decrease, cartToggle, isEmpty } = this.props;\r\n    return (\r\n      <aside className=\"cart\">\r\n        <button onClick={cartToggle} className=\"cart__close-btn\" type=\"button\">\r\n          <img className=\"\" src={close} alt=\"\" />\r\n        </button>\r\n\r\n        {isEmpty.length ? (\r\n          <ul className=\"cart__product-list\">\r\n            {cart.map(item => (\r\n              <li className=\"cart__product-item\" key={item.id}>\r\n                <picture className=\"cart__product-img\">\r\n                  <img src={process.env.PUBLIC_URL + item.image} alt=\"product\" />\r\n                </picture>\r\n                <div className=\"cart__product-info-wrap\">\r\n                  <p className=\"cart__product-title\">{item.title}</p>\r\n                  <div className=\"cart__product-qty-info\">\r\n                    <div>\r\n                      <button\r\n                        className=\"cart__product-qty-btn --minus\"\r\n                        type=\"button\"\r\n                        onClick={() => decrease(item.id)}\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <span>{item.qty}</span>\r\n                      <button\r\n                        className=\"cart__product-qty-btn --plus\"\r\n                        type=\"button\"\r\n                        onClick={() => increase(item.id)}\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <span>$ {item.price}</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p className=\"cart__empty-msg\">В вашей корзине пусто..</p>\r\n        )}\r\n\r\n        <div className=\"cart__total-info\">\r\n          <p>Итого:</p>\r\n          <p>\r\n            ${' '}\r\n            {cart.reduce((acc, val) => {\r\n              acc += val.price * val.qty;\r\n\r\n              return acc;\r\n            }, 0)}\r\n          </p>\r\n        </div>\r\n        {isEmpty.length ? (\r\n          <div className=\"cart__buy-btn-wrap\">\r\n            <button type=\"button\">Купить</button>\r\n          </div>\r\n        ) : null}\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  increase: id => dispatch(increaseQuantity(id)),\r\n  decrease: id => dispatch(decreaseQuantity(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cart);\r\n","import * as types from './types';\r\n\r\nexport const addToCart = item => ({\r\n  type: types.ADD_PRODUCT,\r\n  payload: item,\r\n});\r\n\r\nexport const increaseQuantity = id => ({\r\n  type: types.INCREASE_QUANTITY,\r\n  payload: id,\r\n});\r\n\r\nexport const decreaseQuantity = id => ({\r\n  type: types.DECREASE_QUANTITY,\r\n  payload: id,\r\n});\r\n","export const ADD_PRODUCT = '@@cart/add-product';\r\nexport const INCREASE_QUANTITY = '@@cart/increase-quantity';\r\nexport const DECREASE_QUANTITY = '@@cart/decrease-quantity';\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../../assets/imgs/logo.svg';\r\nimport caret from '../../assets/imgs/caret.svg';\r\nimport { Cart } from '../Cart';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { isOpen } = this.state;\r\n    this.setState({ isOpen: !isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    const { cart } = this.props;\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header__container container\">\r\n          <Link className=\"header__logo\" to=\"/\">\r\n            <img src={logo} alt=\"site-logo\" />\r\n          </Link>\r\n\r\n          <div className=\"header__cart-wrap\">\r\n            <button type=\"button\" className=\"header__cart\" onClick={this.handleClick}>\r\n              <img src={caret} alt=\"caret-icon\" />\r\n            </button>\r\n            <div className=\"header__cart-counter\">\r\n              <span>{cart.length}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isOpen && <Cart cartToggle={this.handleClick} isEmpty={cart} />}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart.items,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Header);\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Products } from '..';\r\n\r\nclass Content extends React.Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Products />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { ProductsNav, ProductsSorter, ProductsGrid } from '..';\r\n\r\nclass Products extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className=\"products\">\r\n        <div className=\"products__container container\">\r\n          <div className=\"products__nav-wrap\">\r\n            <ProductsNav />\r\n            <ProductsSorter />\r\n          </div>\r\n          <div className=\"products__products-wrap\">\r\n            <ProductsGrid />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Header, Content } from '..';\r\n\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Content />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","export const IS_FETCHING = '@@products/is-fetching';\r\nexport const FETCH_SUCCESS = '@@products/fetch-success';\r\nexport const FETCH_ERROR = '@@products/fetch-error';\r\nexport const FILTER_PRODUCTS = '@@products/filter-products';\r\nexport const FILTER_RESET = '@@products/filter-reset';\r\nexport const SORT_PRODUCTS = '@@products/sort-products';\r\nexport const SELECT_PRODUCT = '@@products/select-product';\r\n","class Api {\r\n  constructor() {\r\n    this.defaultHeaders = new Headers({\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n    });\r\n  }\r\n\r\n  get(url, params) {\r\n    const options = {\r\n      method: 'GET',\r\n      headers: this.defaultHeaders,\r\n    };\r\n\r\n    return fetch(`${process.env.PUBLIC_URL}/${url}`, options)\r\n  }\r\n}\r\n\r\nexport const API = new Api();\r\n","import * as types from './types';\r\nimport { API } from '../../utils';\r\nimport { PRODUCT_URL } from '../../utils/constants';\r\n\r\nexport const setIsFetching = bool => ({\r\n  type: types.IS_FETCHING,\r\n  payload: bool,\r\n});\r\n\r\nexport const fetchSuccess = result => ({\r\n  type: types.FETCH_SUCCESS,\r\n  payload: result,\r\n});\r\n\r\nexport const fetchError = err => ({\r\n  type: types.FETCH_ERROR,\r\n  payload: err,\r\n});\r\n\r\nexport const fetchProducts = () => async dispatch => {\r\n  dispatch(setIsFetching(true));\r\n\r\n  try {\r\n    const result = await API.get(PRODUCT_URL).then(response => response.json());\r\n    dispatch(fetchSuccess(result));\r\n  } catch (e) {\r\n    const err = {\r\n      status: 599,\r\n      message: 'Oops! Something wend wrong!',\r\n    };\r\n    dispatch(fetchError(err));\r\n  } finally {\r\n    dispatch(setIsFetching(false));\r\n  }\r\n};\r\n\r\nexport const filterProducts = id => ({\r\n  type: types.FILTER_PRODUCTS,\r\n  payload: id,\r\n});\r\n\r\nexport const filterReset = () => ({\r\n  type: types.FILTER_RESET,\r\n});\r\n\r\nexport const sortItems = name => ({\r\n  type: types.SORT_PRODUCTS,\r\n  payload: name,\r\n});\r\n\r\nexport const selectProduct = id => ({\r\n  type: types.SELECT_PRODUCT,\r\n  payload: id,\r\n});\r\n","export const PRODUCT_URL = '/server/products.json';\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Header } from '../Header';\r\nimport { fetchProducts, selectProduct } from '../../redux-modules/products/actions';\r\nimport { addToCart } from '../../redux-modules/cart/actions';\r\n\r\nclass ProductPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      size: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      selectedItem,\r\n      match: {\r\n        params: { id },\r\n      },\r\n      getProducts,\r\n      selectCurrentProduct,\r\n    } = this.props;\r\n\r\n    if (!selectedItem && id) {\r\n      getProducts();\r\n      selectCurrentProduct(id);\r\n    }\r\n  }\r\n\r\n  handleChange = ev => {\r\n    this.setState({ size: ev.target.value });\r\n  };\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault();\r\n    const { addProductToCart, selectedItem } = this.props;\r\n\r\n    addProductToCart({ ...selectedItem, qty: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { selectedItem } = this.props;\r\n    const { size } = this.state;\r\n    const createMarkup = text => ({ __html: text });\r\n\r\n    return (\r\n      <>\r\n        {selectedItem ? (\r\n          <>\r\n            <Header />\r\n            <form className=\"product-page__container container\" onSubmit={this.handleSubmit}>\r\n              <div className=\"product-page__photo-wrap\">\r\n                <img src={selectedItem.image} alt=\"product\" />\r\n              </div>\r\n              <div className=\"product-page__description-wrap\">\r\n                <Link class=\"product-page__back-btn\" to=\"/\">\r\n                  <i className=\"icon-caret-left-thin\" />\r\n                  <span>Назад</span>\r\n                </Link>\r\n                <div className=\"product-page__info-wrap\">\r\n                  <h3 className=\"product-page__category\">{selectedItem.category.name}</h3>\r\n                  <h2 className=\"product-page__name\">{selectedItem.title}</h2>\r\n                  <div className=\"product-page__attr-wrap\">\r\n                    <div className=\"product-page__form-el-wrap\">\r\n                      <select onChange={this.handleChange}>\r\n                        <option value=\"\" defaultValue>\r\n                          Размер\r\n                        </option>\r\n                        {selectedItem.sizes.map((selectedSize, index) => (\r\n                          <option key={index} value={selectedSize}>\r\n                            {selectedSize}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <button\r\n                      className=\"product-page__form-el-wrap product-page__buy-btn\"\r\n                      type=\"submit\"\r\n                      disabled={!size}\r\n                    >\r\n                      В Корзину\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div dangerouslySetInnerHTML={createMarkup(selectedItem.description)} />\r\n              </div>\r\n            </form>\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { selectedId, items } = state.products;\r\n  const selectedItem = items.reduce((acc, val) => {\r\n    if (val.id === selectedId) {\r\n      acc = val;\r\n    }\r\n    return acc;\r\n  }, null);\r\n\r\n  return {\r\n    selectedItem,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProducts: () => dispatch(fetchProducts()),\r\n  selectCurrentProduct: id => dispatch(selectProduct(id)),\r\n  addProductToCart: product => dispatch(addToCart(product)),\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductPage)\r\n);\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { filterProducts, filterReset } from '../../redux-modules/products/actions';\r\n\r\nclass ProductsNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeId: 'reset',\r\n    };\r\n  }\r\n\r\n  handleClick = ev => {\r\n    const { filter, filterNavReset } = this.props;\r\n    const { id } = ev.target.dataset;\r\n\r\n    this.setState({\r\n      activeId: id,\r\n    });\r\n\r\n    if (id === 'reset') {\r\n      return filterNavReset();\r\n    }\r\n\r\n    filter(id);\r\n  };\r\n\r\n  render() {\r\n    const { activeId } = this.state;\r\n    return (\r\n      <nav className=\"products-nav\">\r\n        <ul className=\"products-nav__list\">\r\n          <li className=\"products-nav__item\">\r\n            <button\r\n              className={\r\n                activeId === 'reset' ? 'products-nav__link --active' : 'products-nav__link'\r\n              }\r\n              data-id=\"reset\"\r\n              type=\"button\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Все\r\n            </button>\r\n          </li>\r\n\r\n          <li className=\"products-nav__item\">\r\n            <button\r\n              className={activeId === '3' ? 'products-nav__link --active' : 'products-nav__link'}\r\n              type=\"button\"\r\n              data-id=\"3\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Рубашки\r\n            </button>\r\n          </li>\r\n\r\n          <li className=\"products-nav__item\">\r\n            <button\r\n              className={activeId === '2' ? 'products-nav__link --active' : 'products-nav__link'}\r\n              type=\"button\"\r\n              data-id=\"2\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Кроссовки\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filter: id => dispatch(filterProducts(id)),\r\n  filterNavReset: () => dispatch(filterReset()),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductsNav);\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { sortItems } from '../../redux-modules/products/actions';\r\n\r\nclass ProductsSorter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      activeSorting: null,\r\n    };\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  handleClick = ev => {\r\n    const { name } = ev.target;\r\n    const { sortProducts } = this.props;\r\n    sortProducts(name);\r\n    this.setState({ activeSorting: name });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen, activeSorting } = this.state;\r\n\r\n    return (\r\n      <div className=\"products-sorter\">\r\n        <div className=\"products-sorter__toggle-wrap\">\r\n          <button\r\n            type=\"button\"\r\n            className={isOpen ? 'products-sorter__toggle --open' : 'products-sorter__toggle'}\r\n            onClick={this.handleToggle}\r\n          >\r\n            <span className=\"products-sorter__toggle-txt\">Сортировать</span>\r\n            <i className=\"products-sorter__toggle-icon icon-caret-down\" />\r\n          </button>\r\n          <ul className=\"products-sorter__list\">\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'priceDown'\r\n                    ? 'products-sorter__btn --active'\r\n                    : 'products-sorter__btn'\r\n                }\r\n                name=\"priceDown\"\r\n                onClick={this.handleClick}\r\n              >\r\n                От дорогих к дешевым\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'priceUp'\r\n                    ? 'products-sorter__btn --active'\r\n                    : 'products-sorter__btn'\r\n                }\r\n                name=\"priceUp\"\r\n                onClick={this.handleClick}\r\n              >\r\n                От дешевых к дорогим\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'popular'\r\n                    ? 'products-sorter__btn --active'\r\n                    : 'products-sorter__btn'\r\n                }\r\n                name=\"popular\"\r\n                onClick={this.handleClick}\r\n              >\r\n                Популярные\r\n              </button>\r\n            </li>\r\n\r\n            <li className=\"products-sorter__item\">\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  activeSorting === 'new' ? 'products-sorter__btn --active' : 'products-sorter__btn'\r\n                }\r\n                name=\"new\"\r\n                onClick={this.handleClick}\r\n              >\r\n                Новые\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sortProducts: name => dispatch(sortItems(name)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductsSorter);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProductsCard } from '..';\r\nimport './index.scss';\r\nimport { fetchProducts } from '../../redux-modules/products/actions';\r\n\r\nclass ProductsGrid extends React.Component {\r\n  componentDidMount() {\r\n    const { getProducts, products } = this.props;\r\n    if (products.length === 0) {\r\n      getProducts();\r\n    }\r\n  }\r\n\r\n  get products() {\r\n    const { filteredProducts, products } = this.props;\r\n\r\n    if (filteredProducts) {\r\n      return filteredProducts;\r\n    }\r\n\r\n    return products;\r\n  }\r\n\r\n  render() {\r\n    const { isFetching } = this.props;\r\n    return (\r\n      <ul className=\"products-grid\">\r\n        {isFetching ? (\r\n          <p>...Loading</p>\r\n        ) : (\r\n          this.products.map(product => <ProductsCard key={product.id} {...product} />)\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.items,\r\n  filteredProducts: state.products.filteredItems,\r\n  isFetching: state.products.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProducts: () => dispatch(fetchProducts()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductsGrid);\r\n","import * as React from 'react';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport Slider from 'react-slick';\r\nimport './index.scss';\r\n\r\nclass ProductSlider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSlide: '0',\r\n    };\r\n  }\r\n\r\n  handleClick = ev => {\r\n    const { setTempImage } = this.props;\r\n    setTempImage(ev.target.currentSrc);\r\n\r\n    this.setState({\r\n      activeSlide: ev.target.dataset.index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n    const { activeSlide } = this.state;\r\n    const settings = {\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n    };\r\n\r\n    return (\r\n      <Slider className=\"products-grid__slider\" {...settings}>\r\n        {images.map((image, index) => (\r\n          <div\r\n            className={\r\n              +activeSlide === index ? 'products-grid__slide --active' : 'products-grid__slide'\r\n            }\r\n            key={index}\r\n          >\r\n            <img\r\n              style={{ width: '100%' }}\r\n              src={image}\r\n              alt=\"thumbnail\"\r\n              data-index={index}\r\n              onClick={this.handleClick}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\nexport default ProductSlider;\r\n","import * as React from 'react';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { ProductSlider } from '../ProductSlider';\r\nimport { selectProduct } from '../../redux-modules/products/actions';\r\n\r\nclass ProductsCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tempImage: null,\r\n    };\r\n  }\r\n\r\n  get image() {\r\n    const { image } = this.props;\r\n    const { tempImage } = this.state;\r\n\r\n    if (tempImage) {\r\n      return tempImage;\r\n    }\r\n\r\n    return image || 'http://placekitten.com/200/30';\r\n  }\r\n\r\n  setTempImage = image => {\r\n    this.setState({ tempImage: image });\r\n  };\r\n\r\n  handleClick = ev => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { title, price, category, count, thumbnail, id, selectCurrentProduct } = this.props;\r\n\r\n    return (\r\n      <li className=\"products-grid__card\">\r\n        <Link\r\n          className=\"products-grid__link\"\r\n          to={`/product/${id}`}\r\n          onClick={() => selectCurrentProduct(id)}\r\n        >\r\n          <div className=\"products-grid__card-img-wrap\">\r\n            <picture className=\"products-grid__card-img\">\r\n              <img src={`${process.env.PUBLIC_URL}/${this.image}`} alt={`${title}`} />\r\n            </picture>\r\n            <div className=\"products-grid__slider-wrap\" onClick={this.handleClick}>\r\n              <ProductSlider images={thumbnail} setTempImage={this.setTempImage} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"products-grid__card-content\">\r\n            <h3 className=\"products-grid__category\">{category.name}</h3>\r\n            <p className=\"products-grid__name\">{title}</p>\r\n            <div className=\"products-grid__info-wrap\">\r\n              <h2 className=\"products-grid__price\">${price}</h2>\r\n              <span className=\"products-grid__qty\">на складе: {count}</span>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectCurrentProduct: id => dispatch(selectProduct(id)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductsCard);\r\n","import * as types from './types';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  error: null,\r\n  items: [],\r\n  filteredItems: null,\r\n};\r\n\r\nexport const products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.IS_FETCHING:\r\n      return { ...state, isFetching: action.payload };\r\n\r\n    case types.FETCH_SUCCESS:\r\n      return { ...state, items: action.payload };\r\n\r\n    case types.FILTER_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        filteredItems: state.items.filter(item => item.category.id === action.payload),\r\n      };\r\n\r\n    case types.FILTER_RESET:\r\n      return { ...state, filteredItems: null };\r\n\r\n    case types.SORT_PRODUCTS:\r\n      if (action.payload === 'priceDown') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort((a, b) => b.price - a.price),\r\n            items: [...state.items].sort((a, b) => b.price - a.price),\r\n          };\r\n        }\r\n\r\n        return { ...state, items: [...state.items].sort((a, b) => b.price - a.price) };\r\n      }\r\n\r\n      if (action.payload === 'priceUp') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort((a, b) => a.price - b.price),\r\n            items: [...state.items].sort((a, b) => a.price - b.price),\r\n          };\r\n        }\r\n\r\n        return { ...state, items: [...state.items].sort((a, b) => a.price - b.price) };\r\n      }\r\n\r\n      if (action.payload === 'popular') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort((a, b) => a.count - b.count),\r\n            items: [...state.items].sort((a, b) => a.count - b.count),\r\n          };\r\n        }\r\n\r\n        return { ...state, items: [...state.items].sort((a, b) => a.count - b.count) };\r\n      }\r\n\r\n      if (action.payload === 'new') {\r\n        if (state.filteredItems) {\r\n          return {\r\n            ...state,\r\n            filteredItems: [...state.filteredItems].sort(\r\n              (a, b) => b.createdTimestamp - a.createdTimestamp\r\n            ),\r\n            items: [...state.items].sort((a, b) => b.createdTimestamp - a.createdTimestamp),\r\n          };\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          items: [...state.items].sort((a, b) => b.createdTimestamp - a.createdTimestamp),\r\n        };\r\n      }\r\n      return { ...state };\r\n\r\n    case types.SELECT_PRODUCT:\r\n      return { ...state, selectedId: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from './types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nexport const cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_PRODUCT:\r\n      const isExist = state.items.reduce((acc, val) => {\r\n        if (val.id === action.payload.id) {\r\n          return true;\r\n        }\r\n\r\n        return acc;\r\n      }, false);\r\n      if (isExist) {\r\n        const computedItems = state.items.reduce((acc, val) => {\r\n          if (val.id === action.payload.id) {\r\n            val.qty++;\r\n          }\r\n\r\n          acc.push(val);\r\n\r\n          return acc;\r\n        }, []);\r\n\r\n        return { ...state, items: computedItems };\r\n      }\r\n\r\n      return { ...state, items: [...state.items, action.payload] };\r\n\r\n    case types.INCREASE_QUANTITY:\r\n      const increasedItems = state.items.reduce((acc, val) => {\r\n        if (val.id === action.payload) {\r\n          val.qty++;\r\n        }\r\n\r\n        acc.push(val);\r\n\r\n        return acc;\r\n      }, []);\r\n\r\n      return {\r\n        ...state,\r\n        items: increasedItems,\r\n      };\r\n\r\n    case types.DECREASE_QUANTITY:\r\n      const decreasedItems = state.items.reduce((acc, val) => {\r\n        if (val.id === action.payload) {\r\n          if (val.qty === 1) {\r\n            return acc;\r\n          }\r\n\r\n          val.qty--;\r\n        }\r\n\r\n        acc.push(val);\r\n\r\n        return acc;\r\n      }, []);\r\n\r\n      return {\r\n        ...state,\r\n        items: decreasedItems,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { products } from './products';\r\nimport { cart } from './cart'\r\n\r\nexport default () =>\r\n\tcombineReducers({\r\n\t\tproducts,\r\n\t\tcart\r\n\t});\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './assets/scss/index.scss';\r\nimport './App.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { HomePage, ProductPage } from './components';\r\n\r\nimport configureStore from './store';\r\n\r\nconst store = configureStore();\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/product/:id\">\r\n            <ProductPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../redux-modules';\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\treturn createStore(\r\n\t\tcreateRootReducer(),\r\n\t\tpreloadedState,\r\n\t\tcomposeEnhancers(applyMiddleware(thunk))\r\n\t);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}